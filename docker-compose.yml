services:
  # MongoDB database
  database:
    image: mongo
    restart: always
    volumes:
      - ./data/db:/data/db

  # Redis server
  redis:
    image: eqalpha/keydb
    restart: always

  # S3-compatible storage server
  minio:
    image: minio/minio
    command: server /data
    env_file: .env
    volumes:
      - ./data/minio:/data
    restart: always

  # Nginx web server
  nginx:
    image: nginx:latest
    restart: unless-stopped
    container_name: nginx
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx/certs:/etc/nginx/certs
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"

  # API server (delta)
  api:
    image: ghcr.io/revoltchat/server:20240929-1
    env_file: .env
    depends_on:
      - database
      - redis
      - nginx
    volumes:
      - ./Revolt.toml:/Revolt.toml
    restart: always

  # Events service (quark)
  events:
    image: ghcr.io/revoltchat/bonfire:20240929-1
    env_file: .env
    depends_on:
      - database
      - redis
      - nginx
    volumes:
      - ./Revolt.toml:/Revolt.toml
    restart: always

  # Web App (revite)
  web:
    image: ghcr.io/revoltchat/client:master
    env_file: .env
    depends_on:
      - nginx
    restart: always

  # File server (autumn)
  autumn:
    image: ghcr.io/revoltchat/autumn:1.1.11
    env_file: .env
    depends_on:
      - database
      - createbuckets
      - nginx
    environment:
      - AUTUMN_MONGO_URI=mongodb://database
    restart: always

  # Metadata and image proxy (january)
  january:
    image: ghcr.io/revoltchat/january:0.3.5
    depends_on:
      - nginx
    restart: always

  # Create buckets for minio.
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    env_file: .env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      while ! /usr/bin/mc ready minio; do echo 'Waiting minio...' && sleep 1; done;
      /usr/bin/mc mb minio/attachments;
      /usr/bin/mc mb minio/avatars;
      /usr/bin/mc mb minio/backgrounds;
      /usr/bin/mc mb minio/icons;
      /usr/bin/mc mb minio/banners;
      /usr/bin/mc mb minio/emojis;
      exit 0;
      "
  
  # Voice server
  vortex:
    build: 
      context: ./vortex
      dockerfile: Dockerfile
    env_file: .env
    restart: always
    ports:
      - "10051-10150:10051-10150"
